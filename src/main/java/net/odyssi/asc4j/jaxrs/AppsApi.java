package net.odyssi.asc4j.jaxrs;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.PATCH;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

import net.odyssi.asc4j.model.AppBetaTestersLinkagesRequest;
import net.odyssi.asc4j.model.AppUpdateRequest;

/**
 * App Store Connect API (Enhanced)
 *
 * <p>
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 */
@Path("/v1/apps")

public interface AppsApi {

	@GET
	@Path("/{id}/appEvents")
	@Produces({ "application/json" })

	public Response appsAppEventsGetToManyRelated(@PathParam("id") String id,
			@QueryParam("filter[eventState]") List<String> filterEventState,
			@QueryParam("filter[id]") List<String> filterId,
			@QueryParam("fields[appEventLocalizations]") List<String> fieldsAppEventLocalizations,
			@QueryParam("fields[appEvents]") List<String> fieldsAppEvents, @QueryParam("limit") Integer limit,
			@QueryParam("limit[localizations]") Integer limitLocalizations,
			@QueryParam("include") List<String> include);

	@GET
	@Path("/{id}/reviewSubmissions")
	@Produces({ "application/json" })

	public Response appsReviewSubmissionsGetToManyRelated(@PathParam("id") String id,
			@QueryParam("filter[platform]") List<String> filterPlatform,
			@QueryParam("filter[state]") List<String> filterState,
			@QueryParam("fields[reviewSubmissionItems]") List<String> fieldsReviewSubmissionItems,
			@QueryParam("fields[appStoreVersions]") List<String> fieldsAppStoreVersions,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("fields[reviewSubmissions]") List<String> fieldsReviewSubmissions,
			@QueryParam("limit") Integer limit, @QueryParam("limit[items]") Integer limitItems,
			@QueryParam("include") List<String> include);

	/**
	 * Get Power and Performance Metrics for an App
	 *
	 * Get the performance and power metrics data for the most recent versions of an
	 * app.
	 *
	 */
	@GET
	@Path("/{id}/perfPowerMetrics")
	@Produces({ "application/vnd.apple.xcode-metrics+json", "application/json" })

	public Response getAppPowerAndPerformanceMetrics(@PathParam("id") String id,
			@QueryParam("filter[deviceType]") List<String> filterDeviceType,
			@QueryParam("filter[metricType]") List<String> filterMetricType,
			@QueryParam("filter[platform]") List<String> filterPlatform);

	/**
	 * List All App Infos for an App
	 *
	 * Get information about an app that is currently live on App Store, or that
	 * goes live with the next version.
	 *
	 */
	@GET
	@Path("/{id}/appInfos")
	@Produces({ "application/json" })

	public Response listAppAppInfos(@PathParam("id") String id,
			@QueryParam("fields[ageRatingDeclarations]") List<String> fieldsAgeRatingDeclarations,
			@QueryParam("fields[appInfos]") List<String> fieldsAppInfos,
			@QueryParam("fields[appInfoLocalizations]") List<String> fieldsAppInfoLocalizations,
			@QueryParam("fields[appCategories]") List<String> fieldsAppCategories,
			@QueryParam("fields[apps]") List<String> fieldsApps, @QueryParam("limit") Integer limit,
			@QueryParam("limit[appInfoLocalizations]") Integer limitAppInfoLocalizations,
			@QueryParam("include") List<String> include);

	/**
	 * List All App Store Versions for an App
	 *
	 * Get a list of all App Store versions of an app across all platforms.
	 *
	 */
	@GET
	@Path("/{id}/appStoreVersions")
	@Produces({ "application/json" })

	public Response listAppAppStoreVersions(@PathParam("id") String id,
			@QueryParam("filter[appStoreState]") List<String> filterAppStoreState,
			@QueryParam("filter[platform]") List<String> filterPlatform,
			@QueryParam("filter[versionString]") List<String> filterVersionString,
			@QueryParam("filter[id]") List<String> filterId,
			@QueryParam("fields[appStoreVersionExperiments]") List<String> fieldsAppStoreVersionExperiments,
			@QueryParam("fields[ageRatingDeclarations]") List<String> fieldsAgeRatingDeclarations,
			@QueryParam("fields[appStoreVersionSubmissions]") List<String> fieldsAppStoreVersionSubmissions,
			@QueryParam("fields[appStoreReviewDetails]") List<String> fieldsAppStoreReviewDetails,
			@QueryParam("fields[appStoreVersions]") List<String> fieldsAppStoreVersions,
			@QueryParam("fields[idfaDeclarations]") List<String> fieldsIdfaDeclarations,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("fields[routingAppCoverages]") List<String> fieldsRoutingAppCoverages,
			@QueryParam("fields[appClipDefaultExperiences]") List<String> fieldsAppClipDefaultExperiences,
			@QueryParam("fields[appStoreVersionPhasedReleases]") List<String> fieldsAppStoreVersionPhasedReleases,
			@QueryParam("fields[builds]") List<String> fieldsBuilds,
			@QueryParam("fields[appStoreVersionLocalizations]") List<String> fieldsAppStoreVersionLocalizations,
			@QueryParam("limit") Integer limit,
			@QueryParam("limit[appStoreVersionLocalizations]") Integer limitAppStoreVersionLocalizations,
			@QueryParam("limit[appStoreVersionExperiments]") Integer limitAppStoreVersionExperiments,
			@QueryParam("include") List<String> include);

	/**
	 * List All Available Territories for an App
	 *
	 * Get a list of App Store territories where an app is or will be available.
	 *
	 */
	@GET
	@Path("/{id}/availableTerritories")
	@Produces({ "application/json" })

	public Response listAppAvailableTerritories(@PathParam("id") String id,
			@QueryParam("fields[territories]") List<String> fieldsTerritories, @QueryParam("limit") Integer limit);

	/**
	 * List All Beta App Localizations of an App
	 *
	 * Get a list of localized beta test information for a specific app.
	 *
	 */
	@GET
	@Path("/{id}/betaAppLocalizations")
	@Produces({ "application/json" })

	public Response listAppBetaAppLocalizations(@PathParam("id") String id,
			@QueryParam("fields[betaAppLocalizations]") List<String> fieldsBetaAppLocalizations,
			@QueryParam("limit") Integer limit);

	/**
	 * List All Beta Groups for an App
	 *
	 * Get a list of beta groups associated with a specific app.
	 *
	 */
	@GET
	@Path("/{id}/betaGroups")
	@Produces({ "application/json" })

	public Response listAppBetaGroups(@PathParam("id") String id,
			@QueryParam("fields[betaGroups]") List<String> fieldsBetaGroups, @QueryParam("limit") Integer limit);

	/**
	 * List All Builds of an App
	 *
	 * Get a list of builds associated with a specific app.
	 *
	 */
	@GET
	@Path("/{id}/builds")
	@Produces({ "application/json" })

	public Response listAppBuilds(@PathParam("id") String id, @QueryParam("fields[builds]") List<String> fieldsBuilds,
			@QueryParam("limit") Integer limit);

	/**
	 * List All Custom Product Pages for an App
	 *
	 */
	@GET
	@Path("/{id}/appCustomProductPages")
	@Produces({ "application/json" })

	public Response listAppCustomProductPages(@PathParam("id") String id,
			@QueryParam("filter[visible]") List<String> filterVisible,
			@QueryParam("fields[appCustomProductPages]") List<String> fieldsAppCustomProductPages,
			@QueryParam("fields[appCustomProductPageVersions]") List<String> fieldsAppCustomProductPageVersions,
			@QueryParam("fields[apps]") List<String> fieldsApps, @QueryParam("limit") Integer limit,
			@QueryParam("limit[appCustomProductPageVersions]") Integer limitAppCustomProductPageVersions,
			@QueryParam("include") List<String> include);

	/**
	 * List All Game Center Enabled Versions for an App
	 *
	 */
	@GET
	@Path("/{id}/gameCenterEnabledVersions")
	@Produces({ "application/json" })

	public Response listAppGameCenterEnabledVersions(@PathParam("id") String id,
			@QueryParam("filter[platform]") List<String> filterPlatform,
			@QueryParam("filter[versionString]") List<String> filterVersionString,
			@QueryParam("filter[id]") List<String> filterId, @QueryParam("sort") List<String> sort,
			@QueryParam("fields[gameCenterEnabledVersions]") List<String> fieldsGameCenterEnabledVersions,
			@QueryParam("fields[apps]") List<String> fieldsApps, @QueryParam("limit") Integer limit,
			@QueryParam("limit[compatibleVersions]") Integer limitCompatibleVersions,
			@QueryParam("include") List<String> include);

	/**
	 * List All In-App Purchases for an App
	 *
	 * List the in-app purchases that are available for your app.
	 *
	 */
	@GET
	@Path("/{id}/inAppPurchases")
	@Produces({ "application/json" })

	public Response listAppInAppPurchases(@PathParam("id") String id,
			@QueryParam("filter[inAppPurchaseType]") List<String> filterInAppPurchaseType,
			@QueryParam("filter[canBeSubmitted]") List<String> filterCanBeSubmitted,
			@QueryParam("sort") List<String> sort,
			@QueryParam("fields[inAppPurchases]") List<String> fieldsInAppPurchases,
			@QueryParam("fields[apps]") List<String> fieldsApps, @QueryParam("limit") Integer limit,
			@QueryParam("limit[apps]") Integer limitApps, @QueryParam("include") List<String> include);

	/**
	 * List All Prerelease Versions for an App
	 *
	 * Get a list of prerelease versions associated with a specific app.
	 *
	 */
	@GET
	@Path("/{id}/preReleaseVersions")
	@Produces({ "application/json" })

	public Response listAppPrereleaseVersions(@PathParam("id") String id,
			@QueryParam("fields[preReleaseVersions]") List<String> fieldsPreReleaseVersions,
			@QueryParam("limit") Integer limit);

	/**
	 * List All Price Points for an App
	 *
	 * Get all the available price points for a specific app.
	 *
	 */
	@GET
	@Path("/{id}/pricePoints")
	@Produces({ "application/json" })

	public Response listAppPricePoints(@PathParam("id") String id,
			@QueryParam("filter[priceTier]") List<String> filterPriceTier,
			@QueryParam("filter[territory]") List<String> filterTerritory,
			@QueryParam("fields[appPriceTiers]") List<String> fieldsAppPriceTiers,
			@QueryParam("fields[appPricePoints]") List<String> fieldsAppPricePoints,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("fields[territories]") List<String> fieldsTerritories, @QueryParam("limit") Integer limit,
			@QueryParam("include") List<String> include);

	/**
	 * List All Prices for an App
	 *
	 * Get the current price tier of an app and any future scheduled price changes.
	 *
	 */
	@GET
	@Path("/{id}/prices")
	@Produces({ "application/json" })

	public Response listAppPrices(@PathParam("id") String id,
			@QueryParam("fields[appPriceTiers]") List<String> fieldsAppPriceTiers,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("fields[appPrices]") List<String> fieldsAppPrices, @QueryParam("limit") Integer limit,
			@QueryParam("include") List<String> include);

	/**
	 * List Apps
	 *
	 * Find and list apps added in App Store Connect.
	 *
	 */
	@GET

	@Produces({ "application/json" })

	public Response listApps(
			@QueryParam("filter[appStoreVersions.appStoreState]") List<String> filterAppStoreVersionsAppStoreState,
			@QueryParam("filter[appStoreVersions.platform]") List<String> filterAppStoreVersionsPlatform,
			@QueryParam("filter[bundleId]") List<String> filterBundleId,
			@QueryParam("filter[name]") List<String> filterName, @QueryParam("filter[sku]") List<String> filterSku,
			@QueryParam("filter[appStoreVersions]") List<String> filterAppStoreVersions,
			@QueryParam("filter[id]") List<String> filterId,
			@QueryParam("exists[gameCenterEnabledVersions]") List<String> existsGameCenterEnabledVersions,
			@QueryParam("sort") List<String> sort, @QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("limit") Integer limit, @QueryParam("include") List<String> include,
			@QueryParam("fields[betaLicenseAgreements]") List<String> fieldsBetaLicenseAgreements,
			@QueryParam("fields[betaAppReviewDetails]") List<String> fieldsBetaAppReviewDetails,
			@QueryParam("fields[appClips]") List<String> fieldsAppClips,
			@QueryParam("fields[appInfos]") List<String> fieldsAppInfos,
			@QueryParam("fields[betaAppLocalizations]") List<String> fieldsBetaAppLocalizations,
			@QueryParam("fields[appPricePoints]") List<String> fieldsAppPricePoints,
			@QueryParam("fields[inAppPurchases]") List<String> fieldsInAppPurchases,
			@QueryParam("fields[preReleaseVersions]") List<String> fieldsPreReleaseVersions,
			@QueryParam("fields[ciProducts]") List<String> fieldsCiProducts,
			@QueryParam("fields[reviewSubmissions]") List<String> fieldsReviewSubmissions,
			@QueryParam("fields[appPrices]") List<String> fieldsAppPrices,
			@QueryParam("fields[appPreOrders]") List<String> fieldsAppPreOrders,
			@QueryParam("fields[betaGroups]") List<String> fieldsBetaGroups,
			@QueryParam("fields[gameCenterEnabledVersions]") List<String> fieldsGameCenterEnabledVersions,
			@QueryParam("fields[endUserLicenseAgreements]") List<String> fieldsEndUserLicenseAgreements,
			@QueryParam("fields[appStoreVersions]") List<String> fieldsAppStoreVersions,
			@QueryParam("fields[appCustomProductPages]") List<String> fieldsAppCustomProductPages,
			@QueryParam("fields[appEvents]") List<String> fieldsAppEvents,
			@QueryParam("fields[territories]") List<String> fieldsTerritories,
			@QueryParam("fields[perfPowerMetrics]") List<String> fieldsPerfPowerMetrics,
			@QueryParam("fields[builds]") List<String> fieldsBuilds,
			@QueryParam("limit[appClips]") Integer limitAppClips,
			@QueryParam("limit[appCustomProductPages]") Integer limitAppCustomProductPages,
			@QueryParam("limit[appEvents]") Integer limitAppEvents,
			@QueryParam("limit[appInfos]") Integer limitAppInfos,
			@QueryParam("limit[appStoreVersions]") Integer limitAppStoreVersions,
			@QueryParam("limit[availableTerritories]") Integer limitAvailableTerritories,
			@QueryParam("limit[betaAppLocalizations]") Integer limitBetaAppLocalizations,
			@QueryParam("limit[betaGroups]") Integer limitBetaGroups, @QueryParam("limit[builds]") Integer limitBuilds,
			@QueryParam("limit[gameCenterEnabledVersions]") Integer limitGameCenterEnabledVersions,
			@QueryParam("limit[inAppPurchases]") Integer limitInAppPurchases,
			@QueryParam("limit[preReleaseVersions]") Integer limitPreReleaseVersions,
			@QueryParam("limit[prices]") Integer limitPrices,
			@QueryParam("limit[reviewSubmissions]") Integer limitReviewSubmissions);

	/**
	 * Modify an App
	 *
	 * Update app information including bundle ID, primary locale, price schedule,
	 * and global availability.
	 *
	 */
	@PATCH
	@Path("/{id}")
	@Consumes({ "application/json" })
	@Produces({ "application/json" })

	public Response modifyApp(@PathParam("id") String id, AppUpdateRequest appUpdateRequest);

	/**
	 * Read the Beta License Agreement of an App
	 *
	 * Get the beta license agreement for a specific app.
	 *
	 */
	@GET
	@Path("/{id}/betaLicenseAgreement")
	@Produces({ "application/json" })

	public Response readAppBetaLicenseAgreement(@PathParam("id") String id,
			@QueryParam("fields[betaLicenseAgreements]") List<String> fieldsBetaLicenseAgreements);

	/**
	 * Read the End User License Agreement Information of an App
	 *
	 * Get the custom end user license agreement (EULA) for a specific app and the
	 * territories where the agreement applies.
	 *
	 */
	@GET
	@Path("/{id}/endUserLicenseAgreement")
	@Produces({ "application/json" })

	public Response readAppEULA(@PathParam("id") String id,
			@QueryParam("fields[endUserLicenseAgreements]") List<String> fieldsEndUserLicenseAgreements);

	/**
	 * Read App Information
	 *
	 * Get information about a specific app.
	 *
	 */
	@GET
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response readAppInformation(@PathParam("id") String id, @QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("include") List<String> include,
			@QueryParam("fields[betaLicenseAgreements]") List<String> fieldsBetaLicenseAgreements,
			@QueryParam("fields[betaAppReviewDetails]") List<String> fieldsBetaAppReviewDetails,
			@QueryParam("fields[appClips]") List<String> fieldsAppClips,
			@QueryParam("fields[appInfos]") List<String> fieldsAppInfos,
			@QueryParam("fields[betaAppLocalizations]") List<String> fieldsBetaAppLocalizations,
			@QueryParam("fields[appPricePoints]") List<String> fieldsAppPricePoints,
			@QueryParam("fields[inAppPurchases]") List<String> fieldsInAppPurchases,
			@QueryParam("fields[preReleaseVersions]") List<String> fieldsPreReleaseVersions,
			@QueryParam("fields[ciProducts]") List<String> fieldsCiProducts,
			@QueryParam("fields[reviewSubmissions]") List<String> fieldsReviewSubmissions,
			@QueryParam("fields[appPrices]") List<String> fieldsAppPrices,
			@QueryParam("fields[appPreOrders]") List<String> fieldsAppPreOrders,
			@QueryParam("fields[betaGroups]") List<String> fieldsBetaGroups,
			@QueryParam("fields[gameCenterEnabledVersions]") List<String> fieldsGameCenterEnabledVersions,
			@QueryParam("fields[endUserLicenseAgreements]") List<String> fieldsEndUserLicenseAgreements,
			@QueryParam("fields[appStoreVersions]") List<String> fieldsAppStoreVersions,
			@QueryParam("fields[appCustomProductPages]") List<String> fieldsAppCustomProductPages,
			@QueryParam("fields[appEvents]") List<String> fieldsAppEvents,
			@QueryParam("fields[territories]") List<String> fieldsTerritories,
			@QueryParam("fields[perfPowerMetrics]") List<String> fieldsPerfPowerMetrics,
			@QueryParam("fields[builds]") List<String> fieldsBuilds,
			@QueryParam("limit[appClips]") Integer limitAppClips,
			@QueryParam("limit[appCustomProductPages]") Integer limitAppCustomProductPages,
			@QueryParam("limit[appEvents]") Integer limitAppEvents,
			@QueryParam("limit[appInfos]") Integer limitAppInfos,
			@QueryParam("limit[appStoreVersions]") Integer limitAppStoreVersions,
			@QueryParam("limit[availableTerritories]") Integer limitAvailableTerritories,
			@QueryParam("limit[betaAppLocalizations]") Integer limitBetaAppLocalizations,
			@QueryParam("limit[betaGroups]") Integer limitBetaGroups, @QueryParam("limit[builds]") Integer limitBuilds,
			@QueryParam("limit[gameCenterEnabledVersions]") Integer limitGameCenterEnabledVersions,
			@QueryParam("limit[inAppPurchases]") Integer limitInAppPurchases,
			@QueryParam("limit[preReleaseVersions]") Integer limitPreReleaseVersions,
			@QueryParam("limit[prices]") Integer limitPrices,
			@QueryParam("limit[reviewSubmissions]") Integer limitReviewSubmissions);

	/**
	 * Read the Pre-Order Information of an App
	 *
	 * Get available date and release date of an app that is available for
	 * pre-order.
	 *
	 */
	@GET
	@Path("/{id}/preOrder")
	@Produces({ "application/json" })

	public Response readAppPreorderInformation(@PathParam("id") String id,
			@QueryParam("fields[appPreOrders]") List<String> fieldsAppPreOrders);

	/**
	 * Read the Xcode Cloud Product for an App
	 *
	 * Get the Xcode Cloud product information for an app you build with Xcode
	 * Cloud.
	 *
	 */
	@GET
	@Path("/{id}/ciProduct")
	@Produces({ "application/json" })

	public Response readAppXcodeCloudProduct(@PathParam("id") String id,
			@QueryParam("fields[ciProducts]") List<String> fieldsCiProducts,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("fields[scmRepositories]") List<String> fieldsScmRepositories,
			@QueryParam("fields[bundleIds]") List<String> fieldsBundleIds,
			@QueryParam("limit[primaryRepositories]") Integer limitPrimaryRepositories,
			@QueryParam("include") List<String> include);

	/**
	 * Read the Beta App Review Details Resource of an App
	 *
	 * Get the beta app review details for a specific app.
	 *
	 */
	@GET
	@Path("/{id}/betaAppReviewDetail")
	@Produces({ "application/json" })

	public Response readBetaAppReviewDetails(@PathParam("id") String id,
			@QueryParam("fields[betaAppReviewDetails]") List<String> fieldsBetaAppReviewDetails);

	/**
	 * Remove Beta Testers from All Groups and Builds of an App
	 *
	 * Remove one or more beta testers&#39; access to test any builds of a specific
	 * app.
	 *
	 */
	@DELETE
	@Path("/{id}/relationships/betaTesters")
	@Consumes({ "application/json" })
	@Produces({ "application/json" })

	public Response removeAppBetaTesters(@PathParam("id") String id,
			AppBetaTestersLinkagesRequest appBetaTestersLinkagesRequest);

	/**
	 * Search an App’s App Clips
	 *
	 * Search your App’s associated App Clips.
	 *
	 */
	@GET
	@Path("/{id}/appClips")
	@Produces({ "application/json" })

	public Response searchAppAppClips(@PathParam("id") String id,
			@QueryParam("filter[bundleId]") List<String> filterBundleId,
			@QueryParam("fields[appClips]") List<String> fieldsAppClips,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("fields[appClipDefaultExperiences]") List<String> fieldsAppClipDefaultExperiences,
			@QueryParam("limit") Integer limit,
			@QueryParam("limit[appClipDefaultExperiences]") Integer limitAppClipDefaultExperiences,
			@QueryParam("include") List<String> include);
}
