package net.odyssi.asc4j.jaxrs;

import java.util.List;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

/**
 * App Store Connect API (Enhanced)
 *
 * <p>
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 */
@Path("/v1/preReleaseVersions")

public interface PreReleaseVersionsApi {

	/**
	 * List All Builds of a Prerelease Version
	 *
	 * Get a list of builds of a specific prerelease version.
	 *
	 */
	@GET
	@Path("/{id}/builds")
	@Produces({ "application/json" })

	public Response listPrereleaseVersionBuilds(@PathParam("id") String id,
			@QueryParam("fields[builds]") List<String> fieldsBuilds, @QueryParam("limit") Integer limit);

	/**
	 * List Prerelease Versions
	 *
	 * Get a list of prerelease versions for all apps.
	 *
	 */
	@GET

	@Produces({ "application/json" })

	public Response listPrereleaseVersions(@QueryParam("filter[builds.expired]") List<String> filterBuildsExpired,
			@QueryParam("filter[builds.processingState]") List<String> filterBuildsProcessingState,
			@QueryParam("filter[builds.version]") List<String> filterBuildsVersion,
			@QueryParam("filter[platform]") List<String> filterPlatform,
			@QueryParam("filter[version]") List<String> filterVersion,
			@QueryParam("filter[app]") List<String> filterApp, @QueryParam("filter[builds]") List<String> filterBuilds,
			@QueryParam("sort") List<String> sort,
			@QueryParam("fields[preReleaseVersions]") List<String> fieldsPreReleaseVersions,
			@QueryParam("limit") Integer limit, @QueryParam("include") List<String> include,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("fields[builds]") List<String> fieldsBuilds, @QueryParam("limit[builds]") Integer limitBuilds);

	/**
	 * Read the App Information of a Prerelease Version
	 *
	 * Get the app information for a specific prerelease version.
	 *
	 */
	@GET
	@Path("/{id}/app")
	@Produces({ "application/json" })

	public Response readPrereleaseVersionAppInformation(@PathParam("id") String id,
			@QueryParam("fields[apps]") List<String> fieldsApps);

	/**
	 * Read Prerelease Version Information
	 *
	 * Get information about a specific prerelease version.
	 *
	 */
	@GET
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response readPrereleaseVersionInformation(@PathParam("id") String id,
			@QueryParam("fields[preReleaseVersions]") List<String> fieldsPreReleaseVersions,
			@QueryParam("include") List<String> include, @QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("fields[builds]") List<String> fieldsBuilds, @QueryParam("limit[builds]") Integer limitBuilds);
}
