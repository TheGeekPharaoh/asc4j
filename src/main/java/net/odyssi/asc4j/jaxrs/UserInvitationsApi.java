package net.odyssi.asc4j.jaxrs;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

import net.odyssi.asc4j.model.UserInvitationCreateRequest;

/**
 * App Store Connect API (Enhanced)
 *
 * <p>
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 */
@Path("/v1/userInvitations")

public interface UserInvitationsApi {

	/**
	 * Cancel a User Invitation
	 *
	 * Cancel a pending invitation for a user to join your team.
	 *
	 */
	@DELETE
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response cancelUserInvitation(@PathParam("id") String id);

	/**
	 * Invite a User
	 *
	 * Invite a user with assigned user roles to join your team.
	 *
	 */
	@POST

	@Consumes({ "application/json" })
	@Produces({ "application/json" })

	public Response inviteUser(UserInvitationCreateRequest userInvitationCreateRequest);

	/**
	 * List Invited Users
	 *
	 * Get a list of pending invitations to join your team.
	 *
	 */
	@GET

	@Produces({ "application/json" })

	public Response listInvitedUsers(@QueryParam("filter[email]") List<String> filterEmail,
			@QueryParam("filter[roles]") List<String> filterRoles,
			@QueryParam("filter[visibleApps]") List<String> filterVisibleApps, @QueryParam("sort") List<String> sort,
			@QueryParam("fields[userInvitations]") List<String> fieldsUserInvitations,
			@QueryParam("limit") Integer limit, @QueryParam("include") List<String> include,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("limit[visibleApps]") Integer limitVisibleApps);

	/**
	 * List All Apps Visible to an Invited User
	 *
	 * Get a list of apps that will be visible to a user with a pending invitation.
	 *
	 */
	@GET
	@Path("/{id}/visibleApps")
	@Produces({ "application/json" })

	public Response listInvitedUserVisibleApps(@PathParam("id") String id,
			@QueryParam("fields[apps]") List<String> fieldsApps, @QueryParam("limit") Integer limit);

	/**
	 * Read User Invitation Information
	 *
	 * Get information about a pending invitation to join your team.
	 *
	 */
	@GET
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response readUserInvitationInformation(@PathParam("id") String id,
			@QueryParam("fields[userInvitations]") List<String> fieldsUserInvitations,
			@QueryParam("include") List<String> include, @QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("limit[visibleApps]") Integer limitVisibleApps);
}
