package net.odyssi.asc4j.jaxrs;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

import net.odyssi.asc4j.model.AppEncryptionDeclarationBuildsLinkagesRequest;

/**
 * App Store Connect API (Enhanced)
 *
 * <p>
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 */
@Path("/v1/appEncryptionDeclarations")

public interface AppEncryptionDeclarationsApi {

	/**
	 * Assign Builds to an App Encryption Declaration
	 *
	 * Assign one or more builds to an app encryption declaration.
	 *
	 */
	@POST
	@Path("/{id}/relationships/builds")
	@Consumes({ "application/json" })
	@Produces({ "application/json" })

	public Response assignAppEncryptionDeclarationBuilds(@PathParam("id") String id,
			AppEncryptionDeclarationBuildsLinkagesRequest appEncryptionDeclarationBuildsLinkagesRequest);

	/**
	 * List App Encryption Declarations
	 *
	 * Find and list all available app encryption declarations.
	 *
	 */
	@GET

	@Produces({ "application/json" })

	public Response listAppEncryptionDeclarations(@QueryParam("filter[platform]") List<String> filterPlatform,
			@QueryParam("filter[app]") List<String> filterApp, @QueryParam("filter[builds]") List<String> filterBuilds,
			@QueryParam("fields[appEncryptionDeclarations]") List<String> fieldsAppEncryptionDeclarations,
			@QueryParam("limit") Integer limit, @QueryParam("include") List<String> include,
			@QueryParam("fields[apps]") List<String> fieldsApps);

	/**
	 * Read App Encryption Declaration Information
	 *
	 * Get information about a specific app encryption declaration.
	 *
	 */
	@GET
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response readAppEncryptionDeclaration(@PathParam("id") String id,
			@QueryParam("fields[appEncryptionDeclarations]") List<String> fieldsAppEncryptionDeclarations,
			@QueryParam("include") List<String> include, @QueryParam("fields[apps]") List<String> fieldsApps);

	/**
	 * Read the App Information of an App Encryption Declaration
	 *
	 * Get the app information from a specific app encryption declaration.
	 *
	 */
	@GET
	@Path("/{id}/app")
	@Produces({ "application/json" })

	public Response readAppEncryptionDeclarationAppInformation(@PathParam("id") String id,
			@QueryParam("fields[apps]") List<String> fieldsApps);
}
