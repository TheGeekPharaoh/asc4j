package net.odyssi.asc4j.jaxrs;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.PATCH;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

import net.odyssi.asc4j.model.AppScreenshotSetAppScreenshotsLinkagesRequest;
import net.odyssi.asc4j.model.AppScreenshotSetCreateRequest;

/**
 * App Store Connect API (Enhanced)
 *
 * <p>
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 */
@Path("/v1/appScreenshotSets")

public interface AppScreenshotSetsApi {

	/**
	 * Create an App Screenshot Set
	 *
	 * Add a new screenshot set to an App Store version localization for a specific
	 * screenshot type and display size.
	 *
	 */
	@POST

	@Consumes({ "application/json" })
	@Produces({ "application/json" })

	public Response createAppScreenshotSet(AppScreenshotSetCreateRequest appScreenshotSetCreateRequest);

	/**
	 * Delete an App Screenshot Set
	 *
	 * Delete an app screenshot set and all of its screenshots.
	 *
	 */
	@DELETE
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response deleteAppScreenshotSet(@PathParam("id") String id);

	/**
	 * Get All App Screenshot IDs for an App Screenshot Set
	 *
	 * Get the ordered screenshot IDs in a screenshot set.
	 *
	 */
	@GET
	@Path("/{id}/relationships/appScreenshots")
	@Produces({ "application/json" })

	public Response getAppScreenshotSetAppScreenshotIDs(@PathParam("id") String id, @QueryParam("limit") Integer limit);

	/**
	 * List All App Screenshots for an App Screenshot Set
	 *
	 * List all ordered screenshots in a screenshot set.
	 *
	 */
	@GET
	@Path("/{id}/appScreenshots")
	@Produces({ "application/json" })

	public Response listAppScreenshotSetAppScreenshots(@PathParam("id") String id,
			@QueryParam("fields[appScreenshotSets]") List<String> fieldsAppScreenshotSets,
			@QueryParam("fields[appScreenshots]") List<String> fieldsAppScreenshots, @QueryParam("limit") Integer limit,
			@QueryParam("include") List<String> include);

	/**
	 * Read App Screenshot Set Information
	 *
	 * Get an app screenshot set including its display target, language, and the
	 * screenshot it contains.
	 *
	 */
	@GET
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response readAppScreenshotSet(@PathParam("id") String id,
			@QueryParam("fields[appScreenshotSets]") List<String> fieldsAppScreenshotSets,
			@QueryParam("include") List<String> include,
			@QueryParam("fields[appScreenshots]") List<String> fieldsAppScreenshots,
			@QueryParam("limit[appScreenshots]") Integer limitAppScreenshots);

	/**
	 * Replace All App Screenshots for an App Screenshot Set
	 *
	 * Change the order of the screenshots in a screenshot set.
	 *
	 */
	@PATCH
	@Path("/{id}/relationships/appScreenshots")
	@Consumes({ "application/json" })
	@Produces({ "application/json" })

	public Response updateAppScreenshotSetAppScreenshots(@PathParam("id") String id,
			AppScreenshotSetAppScreenshotsLinkagesRequest appScreenshotSetAppScreenshotsLinkagesRequest);
}
