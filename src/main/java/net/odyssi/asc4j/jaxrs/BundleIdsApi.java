package net.odyssi.asc4j.jaxrs;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.PATCH;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Response;

import net.odyssi.asc4j.model.BundleIdCreateRequest;
import net.odyssi.asc4j.model.BundleIdUpdateRequest;

/**
 * App Store Connect API (Enhanced)
 *
 * <p>
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 */
@Path("/v1/bundleIds")

public interface BundleIdsApi {

	/**
	 * Delete a Bundle ID
	 *
	 * Delete a bundle ID that is used for app development.
	 *
	 */
	@DELETE
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response deleteBundleID(@PathParam("id") String id);

	/**
	 * List All Capabilities for a Bundle ID
	 *
	 * Get a list of all capabilities for a specific bundle ID.
	 *
	 */
	@GET
	@Path("/{id}/bundleIdCapabilities")
	@Produces({ "application/json" })

	public Response listBundleIDCapabilities(@PathParam("id") String id,
			@QueryParam("fields[bundleIdCapabilities]") List<String> fieldsBundleIdCapabilities,
			@QueryParam("limit") Integer limit);

	/**
	 * List All Profiles for a Bundle ID
	 *
	 * Get a list of all profiles for a specific bundle ID.
	 *
	 */
	@GET
	@Path("/{id}/profiles")
	@Produces({ "application/json" })

	public Response listBundleIDProfiles(@PathParam("id") String id,
			@QueryParam("fields[profiles]") List<String> fieldsProfiles, @QueryParam("limit") Integer limit);

	/**
	 * List Bundle IDs
	 *
	 * Find and list bundle IDs that are registered to your team.
	 *
	 */
	@GET

	@Produces({ "application/json" })

	public Response listBundleIDs(@QueryParam("filter[identifier]") List<String> filterIdentifier,
			@QueryParam("filter[name]") List<String> filterName,
			@QueryParam("filter[platform]") List<String> filterPlatform,
			@QueryParam("filter[seedId]") List<String> filterSeedId, @QueryParam("filter[id]") List<String> filterId,
			@QueryParam("sort") List<String> sort, @QueryParam("fields[bundleIds]") List<String> fieldsBundleIds,
			@QueryParam("limit") Integer limit, @QueryParam("include") List<String> include,
			@QueryParam("fields[bundleIdCapabilities]") List<String> fieldsBundleIdCapabilities,
			@QueryParam("fields[profiles]") List<String> fieldsProfiles,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("limit[bundleIdCapabilities]") Integer limitBundleIdCapabilities,
			@QueryParam("limit[profiles]") Integer limitProfiles);

	/**
	 * Modify a Bundle ID
	 *
	 * Update a specific bundle IDâ€™s name.
	 *
	 */
	@PATCH
	@Path("/{id}")
	@Consumes({ "application/json" })
	@Produces({ "application/json" })

	public Response modifyBundleID(@PathParam("id") String id, BundleIdUpdateRequest bundleIdUpdateRequest);

	/**
	 * Read the App Information of a Bundle ID
	 *
	 */
	@GET
	@Path("/{id}/app")
	@Produces({ "application/json" })

	public Response readBundleIDAppInformation(@PathParam("id") String id,
			@QueryParam("fields[apps]") List<String> fieldsApps);

	/**
	 * Read Bundle ID Information
	 *
	 * Get information about a specific bundle ID.
	 *
	 */
	@GET
	@Path("/{id}")
	@Produces({ "application/json" })

	public Response readBundleIDInformation(@PathParam("id") String id,
			@QueryParam("fields[bundleIds]") List<String> fieldsBundleIds, @QueryParam("include") List<String> include,
			@QueryParam("fields[bundleIdCapabilities]") List<String> fieldsBundleIdCapabilities,
			@QueryParam("fields[profiles]") List<String> fieldsProfiles,
			@QueryParam("fields[apps]") List<String> fieldsApps,
			@QueryParam("limit[bundleIdCapabilities]") Integer limitBundleIdCapabilities,
			@QueryParam("limit[profiles]") Integer limitProfiles);

	/**
	 * Register a New Bundle ID
	 *
	 * Register a new bundle ID for app development.
	 *
	 */
	@POST

	@Consumes({ "application/json" })
	@Produces({ "application/json" })

	public Response registerBundleID(BundleIdCreateRequest bundleIdCreateRequest);
}
